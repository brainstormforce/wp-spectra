name: Build and Deploy

# Run the deployment only when code is committed to teh branch.
on:
  push:
    branches:
      - development

env:
  PLUGIN_PATH: ${{ secrets.SSH_RC_PATH }}/wp-content/plugins/${{ github.event.repository.name }}/

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Get npm cache directory
      id: npm-cache
      run: echo "::set-output name=dir::$(npm config get cache)"

    - name: Configure npm cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Install Dependencies & Build
      run: npm ci && npm run build

    - name: Build a package
      run: bash ./bin/build-zip.sh

    - name: Set environment name
      run: |
          if [ '${{github.ref}}' = 'refs/heads/development' ]
          then
            echo "ENVIRONMENT=DEVELOPMENT" >> $GITHUB_ENV
          fi
          if [ '${{github.ref}}' = 'refs/heads/next-release' ]
          then
            echo "ENVIRONMENT=RELEASE_CANDIDATE" >> $GITHUB_ENV
          fi

    - name: Rsync Deployment
      uses: burnett01/rsync-deployments@4.1
      with:
        # switches: -avzr --delete
        switches: -avzr
        path: artifact/ultimate-addons-for-gutenberg/
        remote_path: ${{ secrets[format('SSH_PATH_{0}', env.ENVIRONMENT)] }}
        remote_host: ${{ secrets.SSH_HOST }}
        remote_user: ${{ secrets.SSH_USER }}
        remote_key: ${{ secrets.SSH_KEY }}

    - name: Rsync Drive Deployment
      uses: burnett01/rsync-deployments@4.1
      if: env.ENVIRONMENT == 'RELEASE_CANDIDATE'
      with:
        # switches: -avzr --delete
        switches: -avzr
        path: artifact/ultimate-addons-for-gutenberg/
        remote_path: ${{ secrets.SSH_DRIVE_PATH }}
        remote_host: ${{ secrets.SSH_DRIVE_HOST }}
        remote_user: ${{ secrets.SSH_DRIVE_USER }}
        remote_key: ${{ secrets.SSH_DRIVE_KEY }}

    - name: Cleanup
      run: rm -rf artifact
