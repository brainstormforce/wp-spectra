name: Code Analysis

# Run the deployment only when code is committed to the branch.
on: pull_request

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
    # The concurrency group contains the workflow name and the branch name for pull requests
    # or the commit hash for any other events.
    group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
    cancel-in-progress: true

jobs:
  lint-and-audit:
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.PRIVATE_ACCESS_TOKEN }}
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Use desired version of NodeJS
      uses: actions/setup-node@v4
      with:
          node-version: ${{ matrix.node }}

    - name: Cache NPM packages
      uses: actions/cache@v3
      with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node }}-npm-cache-${{ hashFiles('**/package-lock.json') }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
          php-version: '8.1'
          coverage: none
          tools: composer, cs2pr, phpcs

    - name: Install dependencies
      run: composer install --prefer-dist --no-suggest --no-progress && npm install

    - name: Run phpcs
      id: phpcs
      if: always()
      run: ./vendor/bin/phpcs --report-full --report-checkstyle=./phpcs-report.xml

    - name: Show PHPCS results in PR
      if: ${{ always() && steps.phpcs.outcome == 'failure' }}
      run: cs2pr ./phpcs-report.xml

    - name: Lint JS
      if: always()
      run: npm run lint:js

    - name: Lint CSS
      if: always()
      run: npm run lint:css

    - name: PHP Syntax Errors
      if: always()
      run: if find . -name "*.php" ! -path "./vendor/*" ! -path "./admin/bsf-core/*" -exec php -l {} \; | grep "Errors parsing"; then exit 1; fi

    - name: PHP static analysis
      if: always()
      run: composer run phpstan
